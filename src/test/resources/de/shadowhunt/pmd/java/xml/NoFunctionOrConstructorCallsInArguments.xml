<?xml version="1.0" encoding="UTF-8"?>
<!--

    Shadowhunt PMD Rulesets - Extended PMD Rulesets
    Copyright Â© 2018 shadowhunt (dev@shadowhunt.de)

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program. If not, see <http://www.gnu.org/licenses/>.

-->
<test-data xmlns="http://pmd.sourceforge.net/rule-tests" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">
    <test-code>
        <description>Positive case</description>
        <expected-problems>3</expected-problems>
        <code><![CDATA[
public class Example {

	public Example() {
		super(new Object());
	}
	
	public Example() {
		this(new Object());
	}
	
    private void doSomeThing(final Object o1) {
        // do nothing
    }

    public void wrong() {
        doSomeThing(new Object());
        doSomeThing(hashCode());
        doSomeThing(System.currentTimeMillis());
    }
}
     ]]></code>
    </test-code>
    <test-code>
        <description>Negative case</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import java.util.Locale;

public class Example {

    private static final String S = "const";

	public Example() {
		super(new Object());
	}
	
	public Example() {
		this(new Object());
	}
	
    public void correct() {
        // variable
        final Object object = new Object();
        final int random = hashCode();
        doSomeThing(object, random);

        // constants
        doSomeThing(S, 42);

        // simple calculations
        doSomeThing(S + S, S + 42);
        
        // only reference a constant or variable
        S.toLowerCase(Locale.ENGLISH);
    }

    private void doSomeThing(final Object o1, final Object o2) {
        // do nothing
    }
}
     ]]></code>
    </test-code>
</test-data>
